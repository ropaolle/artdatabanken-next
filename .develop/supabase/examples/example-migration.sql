-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.movies
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title text COLLATE pg_catalog."default",
    release_year integer,
    CONSTRAINT movies_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.movies
    OWNER to postgres;


GRANT ALL ON TABLE public.movies TO anon;

GRANT ALL ON TABLE public.movies TO authenticated;

GRANT ALL ON TABLE public.movies TO postgres;

GRANT ALL ON TABLE public.movies TO service_role;

CREATE TABLE IF NOT EXISTS public.reviews
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    movie_id bigint,
    comment text COLLATE pg_catalog."default",
    date date,
    CONSTRAINT reviews_pkey PRIMARY KEY (id),
    CONSTRAINT reviews_movie_id_fkey FOREIGN KEY (movie_id)
        REFERENCES public.movies (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.reviews
    OWNER to postgres;


GRANT ALL ON TABLE public.reviews TO anon;

GRANT ALL ON TABLE public.reviews TO authenticated;

GRANT ALL ON TABLE public.reviews TO postgres;

GRANT ALL ON TABLE public.reviews TO service_role;

CREATE TABLE IF NOT EXISTS public.finance
(
    movie_id bigint,
    budget numeric,
    box_office numeric,
    CONSTRAINT finance_pkey PRIMARY KEY (movie_id),
    CONSTRAINT finance_movie_id_fkey FOREIGN KEY (movie_id)
        REFERENCES public.movies (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.finance
    OWNER to postgres;


GRANT ALL ON TABLE public.finance TO anon;

GRANT ALL ON TABLE public.finance TO authenticated;

GRANT ALL ON TABLE public.finance TO postgres;

GRANT ALL ON TABLE public.finance TO service_role;

CREATE TABLE IF NOT EXISTS public.actors
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    birth_date date,
    CONSTRAINT actors_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.actors
    OWNER to postgres;


GRANT ALL ON TABLE public.actors TO anon;

GRANT ALL ON TABLE public.actors TO authenticated;

GRANT ALL ON TABLE public.actors TO postgres;

GRANT ALL ON TABLE public.actors TO service_role;


CREATE TABLE IF NOT EXISTS public.movie_actors
(
    movie_id bigint NOT NULL,
    actor_id bigint NOT NULL,
    CONSTRAINT movie_actors_pkey PRIMARY KEY (movie_id, actor_id),
    CONSTRAINT movie_actors_actor_id_fkey FOREIGN KEY (actor_id)
        REFERENCES public.actors (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT movie_actors_movie_id_fkey FOREIGN KEY (movie_id)
        REFERENCES public.movies (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.movie_actors
    OWNER to postgres;


GRANT ALL ON TABLE public.movie_actors TO anon;

GRANT ALL ON TABLE public.movie_actors TO authenticated;

GRANT ALL ON TABLE public.movie_actors TO postgres;

GRANT ALL ON TABLE public.movie_actors TO service_role;